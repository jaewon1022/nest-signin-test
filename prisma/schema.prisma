// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// model User {
//   id    Int      @default(autoincrement()) @id
//   email String   @unique
//   name  String?
//   posts Post[]
// }

// model Post {
//   id        Int      @default(autoincrement()) @id
//   title     String
//   content   String?
//   published Boolean? @default(false)
//   author    User?    @relation(fields: [authorId], references: [id])
//   authorId  Int?
// }

model users {
  user_id Int @unique @default(autoincrement()) @id
  email String @unique 
  password String
  wallets wallets[]
  // transactions transactions[]
  created_at DateTime @default(now())
  updated_at DateTime @default(now())
}

model wallets {
  id Int @default(autoincrement()) @id
  userId users @relation(fields: [user_id], references: [user_id])
  user_id Int
  account_address String @unique @default(cuid())
  balance Int @default(0)
  created_at DateTime @default(now())
}

// model transactions {
//   transaction_id Int @default(autoincrement()) @id @unique
//   userId users @relation(fields: [user_id], references: [user_id])
//   user_id Int
  // transactionStatus transaction_status @relation(fields: [transaction_status_id], references: [transaction_status_id])
  // transaction_status_id string[]
//   from String
//   to String
//   amount Int
//   transaction_hash String @unique
//   created_at DateTime @default(now())
// }

// model transaction_status {
//   transaction_status_id Int @default(autoincrement()) @id @unique
//   transaction_status transactions[] @relation(fields: [transaction_status_id], references: [transaction_id])
// }